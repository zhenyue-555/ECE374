LIBRARY ieee;
USE ieee.std_logic_1164.all;
library work;

ENTITY PC IS

PORT(
BusMuxOut : IN STD_LOGIC_VECTOR(31 DOWNTO 0); -- input.
PC_in : IN STD_LOGIC; -- load/enable.
IncPC : IN STD_LOGIC; 
clr : IN STD_LOGIC; -- async. clear.
clk : IN STD_LOGIC; -- clock.
BusMuxIn_PC : OUT STD_LOGIC_VECTOR(31 DOWNTO 0) -- output.
);

end PC;

architecture behaviour OF PC IS

component adder
port(
    A_in: in std_logic_vector(31 downto 0);
    B_in: in std_logic_vector(31 downto 0);
    C_out: out std_logic;
    C_in: in std_logic;
    sum: out std_logic_vector(31 downto 0)
);
end component;

variable temp: STD_LOGIC_VECTOR(31 DOWNTO 0);


BEGIN

 adder1 : adder port map(
      A_in >= BusMuxOut,
      B_in >= '1',
      sum >= temp,
      C_in >= '0'
);

   process(clk, clr)

   begin
 

      if (clr = '0') then 
         BusMuxIn_PC <= (others =>'0');
      elsif clk'event and clk ='1' then
      --elsif (rising_edge(clk)) then
         if (PC_in = '1') then
           if(IncPC = '1')then
                 BusMuxIn_PC <= temp;
         else
             BusMuxIn_PC <= BusMuxOut;
             end if;
         end if;
  end if;
   end process;
END architecture;